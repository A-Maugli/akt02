{
  "hints": {
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "bootstrap(uint64,uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "optIntoAsset(uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "buyAsset(pay,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "deleteApplication(uint64)void": {
      "call_config": {
        "delete_application": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "assetAmountInitial": {
          "type": "uint64",
          "key": "assetAmountInitial"
        },
        "assetAmount": {
          "type": "uint64",
          "key": "assetAmount"
        },
        "assetPrice": {
          "type": "uint64",
          "key": "assetPrice"
        },
        "asset": {
          "type": "uint64",
          "key": "asset"
        },
        "sellPeriodEnd": {
          "type": "uint64",
          "key": "sellPeriodEnd"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 5
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "BizKor",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "desc": "Init the values of global keys",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "bootstrap",
        "desc": "boostrap, create ASA, set global key values",
        "args": [
          {
            "name": "assetPrice",
            "type": "uint64",
            "desc": "ASA price in microAlgos"
          },
          {
            "name": "assetAmount",
            "type": "uint64",
            "desc": "ASA inital amount"
          },
          {
            "name": "sellPeriodLength",
            "type": "uint64",
            "desc": "sell period length in secs"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "optIntoAsset",
        "desc": "Obsolete, Opt in to an asset for the app account",
        "args": [
          {
            "name": "asset",
            "type": "uint64",
            "desc": "Asset to opt into"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "buyAsset",
        "desc": "Buy 1 piece of the asset",
        "args": [
          {
            "name": "payment",
            "type": "pay",
            "desc": "Payment in /uAlgos"
          },
          {
            "name": "ASAid",
            "type": "uint64",
            "desc": "reference to ASA, (!)"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "deleteApplication",
        "desc": "Delete app with ABI method",
        "args": [
          {
            "name": "ASAid",
            "type": "uint64",
            "desc": "reference to ASA, (!)"
          }
        ],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}